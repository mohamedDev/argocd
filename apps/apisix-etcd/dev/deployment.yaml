---
# 1. PersistentVolumeClaim (PVC) pour etcd
# NÃ©cessite un provisionneur de stockage par dÃ©faut dans votre cluster (comme celui par dÃ©faut dans Rancher Desktop/K3s)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: etcd-data-pvc
  labels:
    app: etcd-standalone
spec:
  accessModes:
    # ReadWriteOnce est suffisant pour un etcd standalone
    - ReadWriteOnce
  resources:
    requests:
      # Demande 1 Gi de stockage
      storage: 1Gi
  # Si vous avez un StorageClass spÃ©cifique, remplacez '' par son nom.
  # Pour Rancher Desktop/K3s, laisser vide utilise la classe par dÃ©faut (souvent 'local-path').
  storageClassName: "local-path"
---
# 2. DÃ©ploiement d'etcd (Standalone)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: etcd-standalone
  labels:
    app: etcd-standalone
spec:
  replicas: 1
  selector:
    matchLabels:
      app: etcd-standalone
  template:
    metadata:
      labels:
        app: etcd-standalone
    spec:
      containers:
        - name: etcd
          # Utilisation de l'image officielle Bitnami (version rÃ©cente)
          image: bitnamilegacy/etcd:3.6.4-debian-12-r4
          imagePullPolicy: IfNotPresent
          env:
            - name: ALLOW_NONE_AUTHENTICATION
              value: "yes"
            # ðŸ’¡ AJOUT : DÃ©finir explicitement le nom du nÅ“ud/membre
            - name: ETCD_NAME
              value: etcd-standalone
            # Cette valeur doit correspondre au nom du membre dans ETCD_INITIAL_CLUSTER (avant le '=')
            - name: ETCD_ADVERTISE_CLIENT_URLS
              value: http://etcd-service:2379
            - name: ETCD_LISTEN_CLIENT_URLS
              value: http://0.0.0.0:2379
            # Configuration pour le mode standalone
            - name: ETCD_INITIAL_CLUSTER_TOKEN
              value: etcd-cluster-1
            - name: ETCD_INITIAL_CLUSTER_STATE
              value: new
            - name: ETCD_INITIAL_CLUSTER
              value: etcd-standalone=http://etcd-standalone:2380
            - name: ETCD_INITIAL_ADVERTISE_PEER_URLS
              value: http://etcd-standalone:2380
            - name: ETCD_LISTEN_PEER_URLS
              value: http://0.0.0.0:2380
          ports:
            - containerPort: 2379 # Port client
              name: client
            - containerPort: 2380 # Port peer
              name: peer
          volumeMounts:
            - name: etcd-storage
              mountPath: /bitnami/etcd/data
      volumes:
        - name: etcd-storage
          persistentVolumeClaim:
            claimName: etcd-data-pvc
---
# 3. Service pour etcd (ClusterIP)
apiVersion: v1
kind: Service
metadata:
  name: etcd-service
  labels:
    app: etcd-standalone
spec:
  # ClusterIP est suffisant car seul Adminer y accÃ¨de dans le cluster
  type: ClusterIP
  selector:
    app: etcd-standalone
  ports:
    - port: 2379
      targetPort: client
      protocol: TCP
      name: client
---
# 6. DÃ©ploiement d'etcdkeeper (Web UI pour etcd)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: etcdkeeper
  labels:
    app: etcdkeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: etcdkeeper
  template:
    metadata:
      labels:
        app: etcdkeeper
    spec:
      containers:
        - name: etcdkeeper
          # Image d'une interface web simple pour etcd
          image: lihuaiming/etcdkeeper:latest
          ports:
            - containerPort: 8080
---
# 7. Service pour etcdkeeper (NodePort pour l'accÃ¨s externe)
apiVersion: v1
kind: Service
metadata:
  name: etcdkeeper-service-nodeport
  labels:
    app: etcdkeeper
spec:
  type: NodePort
  selector:
    app: etcdkeeper
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30066
      # NodePort choisi automatiquement par Kubernetes (entre 30000-32767)
      # Laissez vide pour un choix automatique ou spÃ©cifiez un port > 30000
