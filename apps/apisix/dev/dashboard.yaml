# ETCD - Base de données pour APISIX
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: etcd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: etcd
  template:
    metadata:
      labels:
        app: etcd
    spec:
      containers:
        - name: etcd
          image: quay.io/coreos/etcd:v3.5.4
          command:
            - etcd
            - --name=etcd0
            - --data-dir=/etcd-data
            - --listen-client-urls=http://0.0.0.0:2379
            - --advertise-client-urls=http://0.0.0.0:2379
            - --listen-peer-urls=http://0.0.0.0:2380
            - --initial-advertise-peer-urls=http://0.0.0.0:2380
            - --initial-cluster=etcd0=http://0.0.0.0:2380
            - --initial-cluster-token=etcd-cluster-1
            - --initial-cluster-state=new
          ports:
            - containerPort: 2379
            - containerPort: 2380
          volumeMounts:
            - name: etcd-data
              mountPath: /etcd-data
      volumes:
        - name: etcd-data
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: etcd-service
spec:
  selector:
    app: etcd
  ports:
    - name: client
      port: 2379
      targetPort: 2379

# APISIX Configuration - Version complète
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: apisix-config
data:
  config.yaml: |
    deployment:
      role: traditional
      role_traditional:
        config_provider: etcd
      etcd:
        host:
          - "http://etcd-service:2379"
        prefix: "/apisix"
        timeout: 30
      admin:
        admin_key:
          - name: "admin"
            key: edd1c9f034335f136f87ad84b625c8f1
            role: admin
        enable_admin_cors: true
        allow_admin:
          - 0.0.0.0/0
        admin_listen:
          ip: 0.0.0.0
          port: 9180
    apisix:
      node_listen: 9080
      enable_ipv6: false
  config-default.yaml: |
    apisix:
      node_listen: 9080
      enable_heartbeat: true
      enable_admin: true
      enable_admin_cors: true
      enable_debug: false
      enable_dev_mode: false
      enable_reuseport: true
      enable_ipv6: false
      config_center: etcd
      allow_admin:
        - 0.0.0.0/0
      port_admin: 9180
      https_admin: false
      enable_server_tokens: true
      delete_uri_tail_slash: false
    nginx_config:
      user: apisix
      worker_processes: auto
      enable_cpu_affinity: false
      worker_rlimit_nofile: 20480
      worker_connections: 10620
      worker_shutdown_timeout: 240s
      event:
        use: epoll
      http:
        enable_access_log: true
        access_log: logs/access.log
        access_log_format: '$remote_addr - $remote_user [$time_local] $http_host "$request" $status $body_bytes_sent $request_time "$http_referer" "$http_user_agent" $upstream_addr $upstream_status $upstream_response_time "$upstream_scheme://$upstream_host$upstream_uri"'
        keepalive_timeout: 60s
        client_header_timeout: 60s
        client_body_timeout: 60s
        send_timeout: 10s
        underscores_in_headers: "on"
        real_ip_header: "X-Real-IP"
        real_ip_from:
          - 127.0.0.1
          - 'unix:'
      error_log: logs/error.log
      error_log_level: warn
    etcd:
      host:
        - "http://etcd-service:2379"
      prefix: "/apisix"
      timeout: 30
      startup_retry: 2
    plugins:
      - real-ip
      - client-control
      - proxy-control
      - request-id
      - fault-injection
      - serverless-pre-function
      - cors
      - ip-restriction
      - ua-restriction
      - referer-restriction
      - uri-blocker
      - request-validation
      - basic-auth
      - jwt-auth
      - key-auth
      - consumer-restriction
      - proxy-rewrite
      - api-breaker
      - limit-conn
      - limit-count
      - limit-req
      - gzip
      - server-info
      - traffic-split
      - redirect
      - response-rewrite
      - prometheus
      - node-status
      - batch-requests
      - http-logger
      - file-logger
      - example-plugin

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apisix
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apisix
  template:
    metadata:
      labels:
        app: apisix
    spec:
      initContainers:
        - name: wait-for-etcd
          image: busybox:1.35
          command: ["sh", "-c"]
          args:
            - |
              echo "Waiting for etcd to be ready..."
              until nc -z etcd-service 2379; do 
                echo "Waiting for etcd-service:2379..."
                sleep 2
              done
              echo "ETCD is ready!"
        - name: setup-config
          image: apache/apisix:3.6.0-debian
          command: ["sh", "-c"]
          args:
            - |
              echo "Copying default config files..."
              cp -r /usr/local/apisix/conf/* /tmp/apisix-conf/
              echo "Config setup complete"
          volumeMounts:
            - name: apisix-conf-temp
              mountPath: /tmp/apisix-conf
      containers:
        - name: apisix
          image: apache/apisix:3.6.0-debian
          ports:
            - containerPort: 9080
            - containerPort: 9180
            - containerPort: 9092
          volumeMounts:
            - name: apisix-conf-temp
              mountPath: /usr/local/apisix/conf
            - name: apisix-config
              mountPath: /usr/local/apisix/conf/config.yaml
              subPath: config.yaml
            - name: apisix-config
              mountPath: /usr/local/apisix/conf/config-default.yaml
              subPath: config-default.yaml
            - name: apisix-logs
              mountPath: /usr/local/apisix/logs
          env:
            - name: APISIX_STAND_ALONE
              value: "false"
            # Variables d'environnement pour forcer la config etcd
            - name: APISIX_DEPLOYMENT_ETCD_HOST
              value: "http://etcd-service:2379"
            - name: APISIX_DEPLOYMENT_ETCD_PREFIX
              value: "/apisix"
            - name: APISIX_DEPLOYMENT_ETCD_TIMEOUT
              value: "30"
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "Starting APISIX initialization..."
              cd /usr/local/apisix

              echo "Testing etcd connectivity with curl..."
              curl -s http://etcd-service:2379/version || echo "Cannot connect to etcd-service:2379"

              echo "=== Custom config.yaml content ==="
              cat conf/config.yaml
              echo "=== End config.yaml ==="

              echo "=== config-default.yaml etcd section ==="
              grep -A 10 "^etcd:" conf/config-default.yaml || echo "No etcd section found in config-default.yaml"
              echo "=== End config-default.yaml ==="

              echo "=== Listing conf directory ==="
              ls -la conf/
              echo "=== End directory listing ==="

              echo "Running init..."
              /usr/local/openresty/luajit/bin/luajit ./apisix/cli/apisix.lua init
              echo "Running init_etcd..."
              /usr/local/openresty/luajit/bin/luajit ./apisix/cli/apisix.lua init_etcd
              echo "Starting APISIX..."
              exec /usr/local/openresty/luajit/bin/luajit ./apisix/cli/apisix.lua start
      volumes:
        - name: apisix-config
          configMap:
            name: apisix-config
        - name: apisix-conf-temp
          emptyDir: {}
        - name: apisix-logs
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: apisix-service
spec:
  selector:
    app: apisix
  type: NodePort
  ports:
    - name: gateway
      port: 9080
      targetPort: 9080
      nodePort: 30080
    - name: admin
      port: 9180
      targetPort: 9180
      nodePort: 30180

# APISIX Dashboard
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: apisix-dashboard-config
data:
  conf.yaml: |
    conf:
      listen:
        host: 0.0.0.0
        port: 9000
      etcd:
        endpoints:
          - etcd-service:2379
        prefix: "/apisix"
      log:
        error_log:
          level: warn
          file_path: logs/error.log
        access_log:
          file_path: logs/access.log

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apisix-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apisix-dashboard
  template:
    metadata:
      labels:
        app: apisix-dashboard
    spec:
      containers:
        - name: apisix-dashboard
          image: apache/apisix-dashboard:3.0.1-alpine
          ports:
            - containerPort: 9000
          volumeMounts:
            - name: dashboard-config
              mountPath: /usr/local/apisix-dashboard/conf/conf.yaml
              subPath: conf.yaml
      volumes:
        - name: dashboard-config
          configMap:
            name: apisix-dashboard-config

---
apiVersion: v1
kind: Service
metadata:
  name: apisix-dashboard-service
spec:
  selector:
    app: apisix-dashboard
  type: NodePort
  ports:
    - name: dashboard
      port: 9000
      targetPort: 9000
      nodePort: 30000

# Service de test simple
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-backend
  template:
    metadata:
      labels:
        app: test-backend
    spec:
      containers:
        - name: httpbin
          image: kennethreitz/httpbin
          ports:
            - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: test-backend-service
spec:
  selector:
    app: test-backend
  ports:
    - name: http
      port: 80
      targetPort: 80
